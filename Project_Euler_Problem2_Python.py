#Project Euler - Problem 2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four 
# million, find the sum of the even-valued terms.

#Solution

def sum_fib():
	fib1 = 1
	fib2 = 2
	fib= 0
	sum = 2
	while fib <= 4000000:
		fib = fib1+ fib2

		if fib%2 == 0:
			sum = sum + fib
		fib1 = fib2
		fib2 = fib

	return sum

print(str(sum_fib()))

#Result = Correct
#notes:
# At first I tried to make a list for fib, but then the program took
# a significant time to run. I also misread the question at first. I
# thought that the number of terms cannot excceed 4 million, not the value. 
# After changing the while condition to fit the question the program ran at a acceptable speed,
# but I'm not sure if getting rid of making a list contributed to the faster runtime. 
